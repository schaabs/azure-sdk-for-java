/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.keyvault.models;

import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The secret item containing secret metadata.
 */
public class SecretItem {
    /**
     * Secret identifier.
     */
    @JsonProperty(value = "id")
    private String id;

    /**
     * The secret management attributes.
     */
    @JsonProperty(value = "attributes")
    private SecretAttributes attributes;

    /**
     * Application specific metadata in the form of key-value pairs.
     */
    @JsonProperty(value = "tags")
    private Map<String, String> tags;

    /**
     * Type of the secret value such as a password.
     */
    @JsonProperty(value = "contentType")
    private String contentType;

    /**
     * True if the secret's lifetime is managed by key vault. If this is a key
     * backing a certificate, then managed will be true.
     */
    @JsonProperty(value = "managed", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean managed;

    /**
     * Get secret identifier.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set secret identifier.
     *
     * @param id the id value to set
     * @return the SecretItem object itself.
     */
    public SecretItem withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the secret management attributes.
     *
     * @return the attributes value
     */
    public SecretAttributes attributes() {
        return this.attributes;
    }

    /**
     * Set the secret management attributes.
     *
     * @param attributes the attributes value to set
     * @return the SecretItem object itself.
     */
    public SecretItem withAttributes(SecretAttributes attributes) {
        this.attributes = attributes;
        return this;
    }

    /**
     * Get application specific metadata in the form of key-value pairs.
     *
     * @return the tags value
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set application specific metadata in the form of key-value pairs.
     *
     * @param tags the tags value to set
     * @return the SecretItem object itself.
     */
    public SecretItem withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get type of the secret value such as a password.
     *
     * @return the contentType value
     */
    public String contentType() {
        return this.contentType;
    }

    /**
     * Set type of the secret value such as a password.
     *
     * @param contentType the contentType value to set
     * @return the SecretItem object itself.
     */
    public SecretItem withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }

    /**
     * Get true if the secret's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.
     *
     * @return the managed value
     */
    public Boolean managed() {
        return this.managed;
    }

}
